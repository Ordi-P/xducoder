<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdu.xducoder.Dao.ChoosecourseMapper">
  <resultMap id="BaseResultMap" type="com.xdu.xducoder.Entity.Choosecourse">
    <id column="STDNum" jdbcType="VARCHAR" property="STDNum" />
    <id column="CourseID" jdbcType="CHAR" property="courseID" />
    <id column="stepID" jdbcType="INTEGER" property="stepID" />
    <result column="RegDate" jdbcType="TIMESTAMP" property="regDate" />
    <result column="CompleteDate" jdbcType="TIMESTAMP" property="completeDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xdu.xducoder.Entity.Choosecourse">
    <result column="CourseScore" jdbcType="BINARY" property="courseScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    STDNum, CourseID, stepID, RegDate, CompleteDate
  </sql>
  <sql id="Blob_Column_List">
    CourseScore
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xdu.xducoder.Entity.ChoosecourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chooseCourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xdu.xducoder.Entity.ChoosecourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from chooseCourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chooseCourse
    where STDNum = #{STDNum,jdbcType=VARCHAR}
      and CourseID = #{courseID,jdbcType=CHAR}
      and stepID = #{stepID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from chooseCourse
    where STDNum = #{STDNum,jdbcType=VARCHAR}
      and CourseID = #{courseID,jdbcType=CHAR}
      and stepID = #{stepID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xdu.xducoder.Entity.ChoosecourseExample">
    delete from chooseCourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xdu.xducoder.Entity.Choosecourse">
    insert into chooseCourse (STDNum, CourseID, stepID, 
      RegDate, CompleteDate, CourseScore
      )
    values (#{STDNum,jdbcType=VARCHAR}, #{courseID,jdbcType=CHAR}, #{stepID,jdbcType=INTEGER}, 
      #{regDate,jdbcType=TIMESTAMP}, #{completeDate,jdbcType=TIMESTAMP}, #{courseScore,jdbcType=BINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xdu.xducoder.Entity.Choosecourse">
    insert into chooseCourse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="STDNum != null">
        STDNum,
      </if>
      <if test="courseID != null">
        CourseID,
      </if>
      <if test="stepID != null">
        stepID,
      </if>
      <if test="regDate != null">
        RegDate,
      </if>
      <if test="completeDate != null">
        CompleteDate,
      </if>
      <if test="courseScore != null">
        CourseScore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="STDNum != null">
        #{STDNum,jdbcType=VARCHAR},
      </if>
      <if test="courseID != null">
        #{courseID,jdbcType=CHAR},
      </if>
      <if test="stepID != null">
        #{stepID,jdbcType=INTEGER},
      </if>
      <if test="regDate != null">
        #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="completeDate != null">
        #{completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="courseScore != null">
        #{courseScore,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update chooseCourse
    <set>
      <if test="record.STDNum != null">
        STDNum = #{record.STDNum,jdbcType=VARCHAR},
      </if>
      <if test="record.courseID != null">
        CourseID = #{record.courseID,jdbcType=CHAR},
      </if>
      <if test="record.stepID != null">
        stepID = #{record.stepID,jdbcType=INTEGER},
      </if>
      <if test="record.regDate != null">
        RegDate = #{record.regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completeDate != null">
        CompleteDate = #{record.completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseScore != null">
        CourseScore = #{record.courseScore,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update chooseCourse
    set STDNum = #{record.STDNum,jdbcType=VARCHAR},
      CourseID = #{record.courseID,jdbcType=CHAR},
      stepID = #{record.stepID,jdbcType=INTEGER},
      RegDate = #{record.regDate,jdbcType=TIMESTAMP},
      CompleteDate = #{record.completeDate,jdbcType=TIMESTAMP},
      CourseScore = #{record.courseScore,jdbcType=BINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chooseCourse
    set STDNum = #{record.STDNum,jdbcType=VARCHAR},
      CourseID = #{record.courseID,jdbcType=CHAR},
      stepID = #{record.stepID,jdbcType=INTEGER},
      RegDate = #{record.regDate,jdbcType=TIMESTAMP},
      CompleteDate = #{record.completeDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xdu.xducoder.Entity.Choosecourse">
    update chooseCourse
    <set>
      <if test="regDate != null">
        RegDate = #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="completeDate != null">
        CompleteDate = #{completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="courseScore != null">
        CourseScore = #{courseScore,jdbcType=BINARY},
      </if>
    </set>
    where STDNum = #{STDNum,jdbcType=VARCHAR}
      and CourseID = #{courseID,jdbcType=CHAR}
      and stepID = #{stepID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xdu.xducoder.Entity.Choosecourse">
    update chooseCourse
    set RegDate = #{regDate,jdbcType=TIMESTAMP},
      CompleteDate = #{completeDate,jdbcType=TIMESTAMP},
      CourseScore = #{courseScore,jdbcType=BINARY}
    where STDNum = #{STDNum,jdbcType=VARCHAR}
      and CourseID = #{courseID,jdbcType=CHAR}
      and stepID = #{stepID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xdu.xducoder.Entity.Choosecourse">
    update chooseCourse
    set RegDate = #{regDate,jdbcType=TIMESTAMP},
      CompleteDate = #{completeDate,jdbcType=TIMESTAMP}
    where STDNum = #{STDNum,jdbcType=VARCHAR}
      and CourseID = #{courseID,jdbcType=CHAR}
      and stepID = #{stepID,jdbcType=INTEGER}
  </update>
</mapper>