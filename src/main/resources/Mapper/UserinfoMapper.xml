<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdu.xducoder.Dao.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.xdu.xducoder.Entity.Userinfo">
    <id column="STDNum" jdbcType="VARCHAR" property="STDNum" />
    <result column="UserName" jdbcType="VARCHAR" property="userName" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="RegDate" jdbcType="TIMESTAMP" property="regDate" />
    <result column="UserID" jdbcType="VARCHAR" property="userID" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    STDNum, UserName, `Password`, Email, RegDate, UserID, `path`
  </sql>
  <select id="selectByExample" parameterType="com.xdu.xducoder.Entity.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where STDNum = #{STDNum,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from userinfo
    where STDNum = #{STDNum,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xdu.xducoder.Entity.UserinfoExample">
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xdu.xducoder.Entity.Userinfo">
    insert into userinfo (STDNum, UserName, `Password`, 
      Email, RegDate, UserID, 
      `path`)
    values (#{STDNum,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{regDate,jdbcType=TIMESTAMP}, #{userID,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xdu.xducoder.Entity.Userinfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="STDNum != null">
        STDNum,
      </if>
      <if test="userName != null">
        UserName,
      </if>
      <if test="password != null">
        `Password`,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="regDate != null">
        RegDate,
      </if>
      <if test="userID != null">
        UserID,
      </if>
      <if test="path != null">
        `path`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="STDNum != null">
        #{STDNum,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="regDate != null">
        #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userID != null">
        #{userID,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update userinfo
    <set>
      <if test="record.STDNum != null">
        STDNum = #{record.STDNum,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        UserName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `Password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.regDate != null">
        RegDate = #{record.regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userID != null">
        UserID = #{record.userID,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        `path` = #{record.path,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userinfo
    set STDNum = #{record.STDNum,jdbcType=VARCHAR},
      UserName = #{record.userName,jdbcType=VARCHAR},
      `Password` = #{record.password,jdbcType=VARCHAR},
      Email = #{record.email,jdbcType=VARCHAR},
      RegDate = #{record.regDate,jdbcType=TIMESTAMP},
      UserID = #{record.userID,jdbcType=VARCHAR},
      `path` = #{record.path,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xdu.xducoder.Entity.Userinfo">
    update userinfo
    <set>
      <if test="userName != null">
        UserName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `Password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="regDate != null">
        RegDate = #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userID != null">
        UserID = #{userID,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where STDNum = #{STDNum,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xdu.xducoder.Entity.Userinfo">
    update userinfo
    set UserName = #{userName,jdbcType=VARCHAR},
      `Password` = #{password,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      RegDate = #{regDate,jdbcType=TIMESTAMP},
      UserID = #{userID,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR}
    where STDNum = #{STDNum,jdbcType=VARCHAR}
  </update>
</mapper>